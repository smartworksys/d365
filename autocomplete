<script>
    // JavaScript to handle filtering
    document.getElementById("doFilterBtn").addEventListener("click", function() {
        const filterValue = document.getElementById("filterInput").value.toLowerCase();
        const rows = document.querySelectorAll("#recommendationTable .recommendation-row");

        rows.forEach(row => {
            const category = row.querySelector(".category").textContent.toLowerCase();
            const title = row.querySelector(".recommendation-title").textContent.toLowerCase();
            row.style.display = (category.includes(filterValue) || title.includes(filterValue)) ? "" : "none";
        });
    });

    // Clear Filter
    document.getElementById("clearFilterBtn").addEventListener("click", function() {
        document.getElementById("filterInput").value = "";
        const rows = document.querySelectorAll("#recommendationTable .recommendation-row");
        rows.forEach(row => row.style.display = "");
    });

    // Function to update the description textbox and hidden dropdown based on radio button selection
    function updateSelection() {
        const selectedRadio = document.querySelector('input[name="selectedRecommendation"]:checked');
        const descriptionBox = document.getElementById("descriptionText");
        const dropdown = document.getElementById("recommendationDropdown");

        // Ensure description box is visible
        descriptionBox.style.display = "block";

        // Clear previous description and dropdown option
        descriptionBox.value = "";
        dropdown.innerHTML = "";

        if (selectedRadio) {
            const recommendationId = selectedRadio.value;
            const recommendationTitle = selectedRadio.getAttribute("data-recommendation-title");
            const recommendationDescription = selectedRadio.getAttribute("data-recommendation-description");

            // Update description textbox
            descriptionBox.value = recommendationDescription;

            // Add selected recommendation to hidden dropdown for form submission
            const dropdownOption = document.createElement("option");
            dropdownOption.value = recommendationId;
            dropdownOption.textContent = recommendationTitle;
            dropdownOption.selected = true;
            dropdown.appendChild(dropdownOption);
        }
    }

    // Add change event listener to radio buttons after they are rendered
    document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll('input[name="selectedRecommendation"]').forEach(radio => {
            radio.addEventListener("change", updateSelection);
        });
    });

    // Save selected recommendation with validation
    document.getElementById("btn_saveRecommendation").addEventListener("click", function(event) {
        const selectedRadio = document.querySelector('input[name="selectedRecommendation"]:checked');

        // Check if any radio button is selected
        if (!selectedRadio) {
            alert("Please select a recommendation before saving.");
            event.preventDefault();  // Stop any default form actions if applicable
            return;  // Do nothing if no selection
        }

        // If a radio button is selected, proceed with save action
        const selectedOptions = Array.from(document.getElementById("recommendationDropdown").options)
            .filter(option => option.selected)
            .map(option => ({ id: option.value, title: option.textContent }));

        console.log("Selected Recommendation for form submission:", selectedOptions);
    });
</script>
