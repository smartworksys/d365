using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace ExternalIPFetcher
{
    class Program
    {
        static async Task Main(string[] args)
        {
            try
            {
                string ip = await GetPublicIPAddressAsync();
                Console.WriteLine("Your public IP is: " + ip);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
            }
        }

        // Method to fetch the public IP address
        public static async Task<string> GetPublicIPAddressAsync()
        {
            string url = "https://httpbin.org/ip";

            using (HttpClient client = new HttpClient())
            {
                HttpResponseMessage response = await client.GetAsync(url);
                response.EnsureSuccessStatusCode();
                string responseBody = await response.Content.ReadAsStringAsync();

                // Assuming the response is in JSON format and has a field named 'origin'
                // For example, the response from httpbin.org/ip looks like { "origin": "x.x.x.x" }
                var ipAddress = System.Text.Json.JsonDocument.Parse(responseBody).RootElement.GetProperty("origin").GetString();

                return ipAddress;
            }
        }
    }
}
