// Variable to store the current Filterfunction reference
var currentFilterFunction = null;

var filterProducts = function(formContext, descId, lookupFieldName, planType) {
    let expirationDate = new Date().toISOString().split('T')[0];

    // Create fetchXml dynamically based on descId (from parent dropdown)
    var fetchXml = `
      <fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false">
      <entity name="nfc_otdb_product">
        <attribute name="nfc_otdb_productid" />
        <attribute name="nfc_otdb_name" />
        <attribute name="createdon" />
        <order attribute="nfc_otdb_name" descending="false" />
        <filter type="and">
          <condition attribute="nfc_otdb_shortdescription" operator="eq" value="${descId}" />
          <condition attribute="statecode" operator="eq" value="0" />
          <condition attribute="nfc_otdb_productstatus" operator="eq" value="451130000" />
          <condition attribute="nfc_otdb_expirationdate" operator="gt" value="${expirationDate}" />
        </filter>
      </entity>
    </fetch>`;

    // Remove any previous filter function if it exists
    if (currentFilterFunction) {
        formContext.getControl(lookupFieldName).removePreSearch(currentFilterFunction);
    }

    // Define a new filter function that dynamically adds the new fetchXml
    currentFilterFunction = function() {
        formContext.getControl(lookupFieldName).addCustomFilter(fetchXml, "nfc_otdb_product");
    };

    // Add the new filter function
    formContext.getControl(lookupFieldName).addPreSearch(currentFilterFunction);
};
