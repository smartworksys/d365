using System;
using System.Net;
using System.Net.Sockets;
using System.Net.NetworkInformation;

namespace PrivateIPAddressFinder
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Listing all IPv4 addresses for active network interfaces:\n");
            foreach (var ip in GetPrivateIPAddresses())
            {
                Console.WriteLine(ip);
            }
        }

        public static IPAddress[] GetPrivateIPAddresses()
        {
            // List to store the private IP addresses
            var ipAddresses = new System.Collections.Generic.List<IPAddress>();

            // Get all network interfaces (excluding loopback)
            foreach (var iface in NetworkInterface.GetAllNetworkInterfaces())
            {
                // Check if the network interface is operational
                if (iface.OperationalStatus == OperationalStatus.Up)
                {
                    foreach (var ip in iface.GetIPProperties().UnicastAddresses)
                    {
                        // We're interested in IPv4 addresses only
                        if (ip.Address.AddressFamily == AddressFamily.InterNetwork)
                        {
                            ipAddresses.Add(ip.Address);
                        }
                    }
                }
            }

            return ipAddresses.ToArray();
        }
    }
}
