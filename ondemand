function validateFieldsOnSave(executionContext) {
    var eventArgs = executionContext.getEventArgs();
    eventArgs.preventDefault(); // Stop the form save process here.

    var formContext = executionContext.getFormContext();
    var certificateAccountNumber = formContext.getAttribute(CONSTANTS.ATTRIBUTE_NAMES.CERTIFICATE_ACCOUNT_NUMBER).getValue();
    var affiliateAccountNumber = formContext.getAttribute(CONSTANTS.ATTRIBUTE_NAMES.AFFILIATE_ACCOUNT_NUMBER).getValue();

    if (!certificateAccountNumber) {
        Xrm.Navigation.openAlertDialog({ text: formatString(CONSTANTS.MESSAGES.REQUIRED_FIELD, "Certificate Account Number") });
        return;
    }
    if (!affiliateAccountNumber) {
        Xrm.Navigation.openAlertDialog({ text: formatString(CONSTANTS.MESSAGES.REQUIRED_FIELD, "Affiliate Account Number") });
        return;
    }

    var manualReview = formContext.getAttribute(CONSTANTS.ATTRIBUTE_NAMES.MANUAL_REVIEW).getValue();
    if (manualReview) {
        var confirmOptions = {
            title: "Confirmation Required",
            text: CONSTANTS.MESSAGES.MANUAL_REVIEW_CONFIRMATION
        };

        Xrm.Navigation.openConfirmDialog(confirmOptions).then(function (result) {
            if (result.confirmed) {
                // User confirmed, proceed with save based on the mode
                performSave(formContext, eventArgs);
            } else {
                console.log("Save canceled by user.");
            }
        }).catch(function (error) {
            console.log("Error in confirmation dialog: " + error);
        });
    } else {
        // No manual review needed, just perform the save directly
        performSave(formContext, eventArgs);
    }
}

function performSave(formContext, eventArgs) {
    var saveMode = eventArgs.getSaveMode();
    switch (saveMode) {
        case 1: // Save
        case 70: // AutoSave (if enabled and necessary)
            formContext.data.save();
            break;
        case 2: // Save and Close
            formContext.data.save("saveandclose");
            break;
    }
}
