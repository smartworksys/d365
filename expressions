<div id="recommendationsInputModal" role="dialog" class="modal fade modal-form modal-form-insert in" data-backdrop="static">
    <div class="modal-lg modal-dialog modal-accnt" style="max-width: 850px !important;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Recommendations</h4>
                <button type="button" data-dismiss="modal" class="close">Ã—</button>
            </div>

            <div class="modal-body">
                <table style="width:100%">
                    <tr>
                        <td>
                            <label for="filterInput" id="filterInputLabel">Filter List by: </label>
                            <input type="text" placeholder="search term" id="filterInput" class="form-control" value="" style="width:500px; display:inline-block;">
                            &nbsp;
                            <button type="button" id="clearFilterBtn" class="btn action">Clear</button>
                            <button type="button" id="doFilterBtn" class="btn btn-primary action">Filter</button>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div style="margin-top:15px">
                                <label for="recommendationTable">Select Recommendations:</label>
                                <!-- Make the table scrollable by setting max-height and overflow-y -->
                                <div style="max-height: 300px; overflow-y: auto;">
                                    <table id="recommendationTable" class="table table-bordered" style="margin-top:10px; width:100%;">
                                        <thead>
                                            <tr>
                                                <th>Select</th>
                                                <th>Category</th>
                                                <th>Recommendation Title</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% if lq_parent_ewr_program_GUID %}
                                                {% assign ewrParentProgramID = lq_parent_ewr_program_GUID %}
                                                {% fetchxml recommendations_query %}
                                                    <fetch>
                                                        <entity name="cms_ewr_recommendation">
                                                            <attribute name="cms_ewr_recommendationid" />
                                                            <attribute name="cms_recommendation_title" />
                                                            <attribute name="cms_recommendation_description" />
                                                            <attribute name="cms_related_measure_id" />
                                                            <link-entity name="cms_measurecategory" from="cms_measurecategoryid" to="cms_recommendation_category_id" alias="cat" link-type="inner" relationship="cms_rel_recommendation_category">
                                                                <attribute name="cms_name" /> <!-- Category name attribute -->
                                                                <filter>
                                                                    <condition attribute="cms_measurecategoryid" operator="eq" value="{{ewrParentProgramID}}" />
                                                                </filter>
                                                            </link-entity>
                                                            <link-entity name="cms_ewr_recommendation_cms_ewr_program" from="cms_ewr_recommendationid" to="cms_ewr_recommendationid" intersect="true">
                                                                <link-entity name="cms_ewr_program" from="cms_ewr_programid" to="cms_ewr_programid" alias="s">
                                                                    <attribute name="cms_ewr_programid" />
                                                                    <filter>
                                                                        <condition attribute="cms_ewr_programid" operator="eq" value="{{ewrParentProgramID}}" />
                                                                    </filter>
                                                                </link-entity>
                                                            </link-entity>
                                                        </entity>
                                                    </fetch>
                                                {% endfetchxml %}

                                                {% for recommendationsIntersect in recommendations_query.results.entities %}
                                                    <tr class="recommendation-row">
                                                        <td>
                                                            <input type="checkbox" name="selectedRecommendations"
                                                                   value="{{recommendationsIntersect.cms_ewr_recommendationid}}"
                                                                   data-category-name="{{recommendationsIntersect.cat.cms_name}}"
                                                                   data-recommendation-title="{{recommendationsIntersect.cms_recommendation_title}}">
                                                        </td>
                                                        <td class="category">{{recommendationsIntersect.cat.cms_name}}</td>
                                                        <td class="recommendation-title">{{recommendationsIntersect.cms_recommendation_title}}</td>
                                                    </tr>
                                                {% endfor %}
                                            {% endif %}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <p id="descriptionText" style="margin-top:15px"></p>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div style="margin-top:25px">
                                <label for="quantityRecommended" id="quantityRecommendedLabel">Quantity Recommended:</label>
                                <input type="text" id="txtQtyRecommended" class="form-control" value="1">
                            </div>
                        </td>
                    </tr>
                    <!-- Multi-select dropdown -->
                    <tr>
                        <td>
                            <div style="margin-top:15px">
                                <label for="recommendationDropdown">Selected Recommendations:</label>
                                <select id="recommendationDropdown" class="form-control" multiple>
                                    <!-- Dropdown dynamically updated based on selection -->
                                </select>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btn_saveRecommendation">Save Recommendations</button>
            </div>
        </div>
    </div>
</div>

<script>
    // JavaScript to handle filtering
    document.getElementById("doFilterBtn").addEventListener("click", function() {
        const filterValue = document.getElementById("filterInput").value.toLowerCase();
        const rows = document.querySelectorAll("#recommendationTable .recommendation-row");

        rows.forEach(row => {
            const category = row.querySelector(".category").textContent.toLowerCase();
            const title = row.querySelector(".recommendation-title").textContent.toLowerCase();
            row.style.display = (category.includes(filterValue) || title.includes(filterValue)) ? "" : "none";
        });
    });

    // Clear Filter
    document.getElementById("clearFilterBtn").addEventListener("click", function() {
        document.getElementById("filterInput").value = "";
        const rows = document.querySelectorAll("#recommendationTable .recommendation-row");
        rows.forEach(row => row.style.display = "");
    });

    // Set selected recommendations in the multi-select dropdown
    document.getElementById("btn_saveRecommendation").addEventListener("click", function() {
        const selectedCheckboxes = document.querySelectorAll('input[name="selectedRecommendations"]:checked');
        const dropdown = document.getElementById("recommendationDropdown");
        dropdown.innerHTML = ""; // Clear existing options

        selectedCheckboxes.forEach(checkbox => {
            const recommendationId = checkbox.value;
            const recommendationTitle = checkbox.getAttribute("data-recommendation-title");

            // Add each selected recommendation as an option in the dropdown
            const option = document.createElement("option");
            option.value = recommendationId;
            option.textContent = recommendationTitle;
            option.selected = true; // Mark option as selected
            dropdown.appendChild(option);
        });

        console.log("Recommendations selected and updated in dropdown.");
    });
</script>
