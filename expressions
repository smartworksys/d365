function populateAccountsDropdown(data, accountSubtype) {
    const dvMemberAccounts = document.getElementById("dvmemberaccounts");
    dvMemberAccounts.style.display = "flex";

    const dropdown = document.getElementById("drpMemberAccounts");
    dropdown.innerHTML = '';

    const defaultOption = document.createElement("option");
    defaultOption.text = "--Select--";
    defaultOption.value = "";
    dropdown.add(defaultOption);

    // Define excluded combinations as concatenated strings
    const excludedCombinations = ["BENPOD", "MINUGM", "PRIGSP", "SECDEC"];

    // Filter data to exclude specific combinations, trimming both fields
    const filteredAccountData = data.filter(item => {
        const ownershipCode = item.memberAccountOwnershipCode ? item.memberAccountOwnershipCode.trim() : "";
        const relationshipType = item.memberAccountRelationshipType ? item.memberAccountRelationshipType.trim() : "";

        // Concatenate trimmed values and check they are NOT in excluded combinations
        return !excludedCombinations.includes(ownershipCode + relationshipType);
    });

    console.log("Filtered Account Data (Excluding Specific Combinations): ", filteredAccountData);

    // Populate dropdown with accounts based on filtered data and account subtype
    filteredAccountData.forEach(function(item) {
        let shouldAddOption = false;

        if (accountSubtype === "ED" && item.subType === "IR" && item.iraPlanSequenceNumber === "EDN") {
            shouldAddOption = true;
        } 
        else if (accountSubtype === "IR" && item.subType === "IR" &&
                 ["IRA", "SEP", "RTH"].includes(item.iraPlanSequenceNumber)) {
            shouldAddOption = true;
        } 
        else if (item.subType === accountSubtype) {
            shouldAddOption = true;
        }

        if (shouldAddOption) {
            const option = document.createElement("option");
            option.text = item.accountNumber;
            option.value = item.accountNumber;
            dropdown.add(option);
        }
    });

    // If there are valid accounts, call to populate affiliate accounts
    if (filteredAccountData.length > 0) {
        populateAffiliateAccountsDropdown(data, '', accountSubtype);
    }
}
