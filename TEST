# Azure Logic Apps and Pipeline Deployment

## Project Overview
This project manages Azure Logic App workflows for interacting with Dynamics CRM. It automates tasks like creating, updating, and managing contact and address details in CRM and ensures data consistency across integrated platforms. The Azure Pipeline included is configured to facilitate the deployment of these workflows across multiple environments.

## Prerequisites
- Azure subscription
- Access to Azure DevOps
- Permission to manage Azure resources and Logic Apps
- Dynamics CRM setup

## Setup Instructions
1. **Clone the repository** to your local machine or Azure DevOps environment.
2. **Configure Azure services**, ensuring that Azure Logic Apps, Azure Functions, and any necessary connections (e.g., Dynamics CRM) are properly set up and configured.
3. **Set environment variables** in your Azure Key Vault as per your operational security guidelines.

## Workflow Details
Each workflow serves a specific operation within the CRM system:

- **CRM-ASB-Address-Create**: Manages the creation of new address records.
- **CRM-ASB-Address-Update**: Handles updates to existing address records.
- **CRM-ASB-Contact-Address-Update**: Updates contact address details.
- **CRM-ASB-Contact-Create**: Automates the creation of new contact records.
- **CRM-ASB-Contact-Telephone-Update**: Manages updates to contact telephone information.
- **CRM-ASB-Contact-Update**: General updates to contact records.

## Pipeline Configuration
The Azure Pipeline (`azure-pipelines.yml`) is designed to handle deployments across different environments with the following key features:

- **Parameterized Builds**: Allows for specifying the environment, and control over deploying app connections and logic app workflows.
- **Stages**:
  - **Deploy CRM Connection**: Fetches secrets and deploys CRM connections.
  - **Build Artifacts**: Prepares artifacts necessary for deployment.
  - **ARM Template Deploy**: Deploys Logic App workflows to Azure.

## Usage Instructions
To deploy the workflows:
1. **Navigate to Azure DevOps** and select the appropriate pipeline.
2. **Run the pipeline** with the desired parameters (`environment`, `deploy_app_connections`, and `deploy_logicapp_workflows`).

## Contributing
To contribute to this project:
1. **Fork the repository**.
2. **Create a new branch** for each feature or improvement.
3. **Submit a pull request** against the main branch.

## License
This project is licensed under the MIT License. See the LICENSE file in the repository for full license text.




# Azure Logic Apps and Dynamics CRM Integration

## Project Overview
This project manages Azure Logic Apps workflows that integrate with Dynamics CRM to automate tasks such as creating, updating, and managing contact and address details. The Azure Pipeline included is configured to facilitate the deployment of these workflows across multiple environments, ensuring consistent and efficient data management.

## Prerequisites
- An Azure subscription.
- Access to Azure DevOps.
- Permissions to manage Azure resources and Logic Apps.
- Dynamics CRM setup and configured for integration.

## Setup Instructions
1. **Clone the Repository:**
   Clone the repository to either a local machine or a cloud environment.

2. **Configure Azure Services:**
Ensure that Azure Logic Apps, Azure Functions, and necessary API connections (such as Dynamics CRM) are properly configured.
3. **Set Environment Variables:**
Utilize Azure Key Vault to securely store and manage environment-specific secrets and credentials.

## Workflow Details
Each Logic App workflow is designed to handle specific operations within Dynamics CRM:

- **CRM-ASB-Address-Create:** Manages the creation of new address records by capturing and sending details to Azure Service Bus.
- **CRM-ASB-Address-Update:** Handles updates to existing address records, ensuring data consistency across platforms.
- **CRM-ASB-Contact-Address-Update:** Specifically updates contact address details in various systems upon modification in CRM.
- **CRM-ASB-Contact-Create:** Automates the process of creating new contact records in CRM and reflects these changes in connected systems.
- **CRM-ASB-Contact-Telephone-Update:** Updates telephone information in external systems following changes in CRM.
- **CRM-ASB-Contact-Update:** Provides general updates to contact records, covering multiple fields and ensuring data integrity.

## Pipeline Configuration
The Azure Pipeline (`azure-pipelines.yml`) is tailored for multi-environment deployments, featuring:

- **Parameterized Builds:** Configurable parameters such as `environment`, `deploy_app_connections`, and `deploy_logicapp_workflows`.
- **Deploy CRM Connection:** Fetches secrets and deploys necessary CRM connections using data from Azure Key Vault.
- **Build Artifacts:** Compiles and prepares Logic Apps for deployment, ensuring artifacts are ready for subsequent deployment stages.
- **ARM Template Deploy:** Deploys the Logic App workflows to Azure using ARM templates, allowing for conditional deployment based on the specified environment.

## Usage Instructions
To deploy the workflows:
1. Navigate to Azure DevOps and locate the project's pipeline.
2. Run the pipeline with the desired parameters:
- Choose the environment (Development, Test, or Production).
- Set `deploy_app_connections` and `deploy_logicapp_workflows` as needed.

## Contributing
Interested in contributing? Follow these steps:
1. Fork the repository.
2. Create a new branch for your feature or bug fix.
3. Make your changes and test them thoroughly.
4. Submit a pull request with a detailed description of your changes.

## Release Notes
### Version 1.2 (March 2025)
- Added support for multi-environment deployments using parameterized builds.
- Enhanced security features with improved Azure Key Vault integration.

### Version 1.1 (January 2025)
- Introduced "CRM-ASB-Contact-Telephone-Update" workflow.
- Fixed bugs related to address synchronization in "CRM-ASB-Address-Update".

### Version 1.0 (December 2024)
- Initial release with basic Logic App workflows for CRM integration.
- Setup Azure DevOps CI/CD pipeline for automated deployment.

## License
This project is licensed under the MIT License. Full license text is available in the LICENSE file within the repository.


