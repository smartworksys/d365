# Azure Logic App Workflow & Deployment Process

## Table of Contents
- [Introduction](#introduction)
- [Project Architecture](#project-architecture)
- [Workflow Overview](#workflow-overview)
- [Deployment Pipeline](#deployment-pipeline)
- [Prerequisites](#prerequisites)
- [Setup and Execution](#setup-and-execution)
- [Testing and Troubleshooting](#testing-and-troubleshooting)
- [Release History](#release-history)
- [Additional Notes](#additional-notes)
- [License](#license)

## Introduction
This repository contains an Azure Logic App workflow that integrates with Dynamics CRM to process policy requests and update AWD records. An Azure DevOps pipeline automates the deployment of both the Logic App connections and the workflow.

## Project Architecture
- **Trigger:** Activated via a webhook when an incident record is modified (filtered by `kofc_policyrequestssaved`).
- **Data Retrieval:** Uses FetchXML queries to obtain case and policy request details from Dynamics CRM.
- **Processing:** Leverages Select, Compose, and Foreach actions to transform and filter data by request type.
- **API Integration:** Sends HTTP requests with XML payloads to AWD APIs and parses JSON responses for AWD instance IDs.
- **Record Update:** Updates CRM records with the returned AWD instance IDs using PATCH operations.
- **Security:** API credentials and endpoints are securely managed via Azure Key Vault.

## Workflow Overview
- **Data Fetching:**  
  Retrieves incident details (e.g., case and ticket numbers) and policy requests for various request types.
- **Data Processing:**  
  Combines, filters, and prepares data for external API calls.
- **AWD API Calls:**  
  Creates instances via AWD APIs and extracts the AWD instance ID from responses.
- **CRM Record Updates:**  
  Uses the AWD instance IDs to update CRM records.

## Deployment Pipeline
The Azure DevOps pipeline consists of these stages:

1. **Deploy CRM Connections:**  
   - Retrieves secrets from Azure Key Vault.
   - Deploys connection resources via an ARM template.

2. **Build Artifacts:**  
   - Copies Logic App workflow files.
   - Archives files into a zip package and publishes them as artifacts.

3. **Deploy Logic App Workflows:**  
   - Downloads artifacts.
   - Deploys the workflow using an Azure Function App task configured for Logic Apps.

**Key Pipeline Parameters:**
- `environment`: Sets the deployment environment (e.g., test, uat, prod).
- `deploy_app_connections`: Boolean flag to deploy Logic App connection resources.
- `deploy_logicapp_workflows`: Boolean flag to deploy the Logic App workflow.

**Environment Variables:**
- Managed in separate YAML files (e.g., `pipeline-vars-test.yml`).
- API credentials and URLs are securely retrieved from Azure Key Vault.

## Prerequisites
- Active Azure subscription with proper permissions.
- Configured Azure Key Vault with required secrets (API credentials, endpoints).
- Correct Dynamics CRM API connection settings.
- Access to the ARM templates and Logic App workflow files.

## Setup and Execution

1. **Clone the Repository:**
   ```bash
   git clone <repository-url>


## Configure Environment

1. **Set the environment parameter**  
   *(e.g., test, uat, or prod).*

2. **Ensure your Azure Key Vault holds the necessary secrets**  
   Make sure the secrets (e.g., API credentials, endpoints) are stored and accessible.

## Set Deployment Flags

- **Adjust** `deploy_app_connections` and `deploy_logicapp_workflows` as needed.

## Run the Pipeline

1. **Trigger the Azure DevOps pipeline**  
   Run it manually or integrate it with your CI/CD process.

2. **Monitor Deployment**  
   Check the Azure Portal and pipeline logs for status and any issues.

---

## Testing and Troubleshooting

### Testing

- Modify or create an incident record in Dynamics CRM to trigger the Logic App.  
- Verify successful runs and outputs in the Logic App run history within the Azure Portal.

### Troubleshooting

- **Inspect Logic App logs** and run history for errors.  
- **Ensure** that API connections and Key Vault configurations are correct.  
- **Review** Azure DevOps pipeline logs for any deployment issues.

---

## Release History

### Version 1.0.0 – Initial Release
- **Release Date:** YYYY-MM-DD
- **Features:**
  - Initial implementation of the Logic App workflow.
  - Integration with Dynamics CRM for processing policy requests.
  - AWD API calls for instance creation and record updates.
  - Automated deployment pipeline using Azure DevOps.
- **Notes:**  
  This version provides the essential functionalities including data retrieval, processing, and record updates.

### Version 1.0.1 – Bug Fix Release
- **Release Date:** YYYY-MM-DD
- **Fixes:**
  - Corrected issues with API credential retrieval from Azure Key Vault.
  - Resolved intermittent failures in AWD API calls.
  - Improved error logging to facilitate better troubleshooting.
- **Notes:**  
  Focused on enhancing the stability and reliability of the workflow.

### Version 1.1.0 – Enhancement Release
- **Release Date:** YYYY-MM-DD
- **Enhancements:**
  - Added support for additional policy request types.
  - Enhanced validation and error handling during CRM record updates.
  - Optimized data processing for improved performance.
- **Notes:**  
  This release expands the workflow capabilities and optimizes overall performance.

---

## Additional Notes

This document serves as a comprehensive guide to understanding and deploying the Azure Logic App workflow. Further customization may be needed based on project-specific requirements.

---

## License

[Specify your license here]
