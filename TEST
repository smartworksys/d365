import os
import json

def search_in_json(data, search_text, path=""):
    """Recursively search for text in nested JSON structure."""
    results = []
    if isinstance(data, dict):
        for key, value in data.items():
            full_path = f"{path}.{key}" if path else key
            results.extend(search_in_json(value, search_text, full_path))
    elif isinstance(data, list):
        for index, item in enumerate(data):
            full_path = f"{path}[{index}]"
            results.extend(search_in_json(item, search_text, full_path))
    else:
        if search_text.lower() in str(data).lower():
            results.append((path, data))
    return results

def search_in_text_file(file_path, search_text):
    """Search for text in plain text file."""
    matches = []
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            for i, line in enumerate(f, 1):
                if search_text.lower() in line.lower():
                    matches.append((f"Line {i}", line.strip()))
    except Exception as e:
        print(f"‚ö†Ô∏è Could not read text file: {file_path} ‚Äî {e}")
    return matches

def search_folder_recursive(folder_path, search_text):
    results = {}

    for root, dirs, files in os.walk(folder_path):
        for file in files:
            full_path = os.path.join(root, file)
            try:
                with open(full_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                try:
                    json_data = json.loads(content)
                    matches = search_in_json(json_data, search_text)
                except json.JSONDecodeError:
                    matches = search_in_text_file(full_path, search_text)
                if matches:
                    results[full_path] = matches
            except Exception as e:
                print(f"‚ö†Ô∏è Skipped file {full_path} due to error: {e}")
    return results

# ---- CONFIG ----
search_root = "./your_folder_path_here"       # Replace with your folder path
search_term = "reporting expectations"        # Replace with your search string

# ---- EXECUTE ----
found = search_folder_recursive(search_root, search_term)

# ---- OUTPUT ----
if found:
    print(f"\nüîç Found '{search_term}' in these files:\n")
    for filepath, matches in found.items():
        print(f"üìÅ {filepath}")
        for path, value in matches:
            print(f"  ‚û§ {path}: {value}\n")
else:
    print(f"\n‚ùå No matches found for '{search_term}' in '{search_root}'")
